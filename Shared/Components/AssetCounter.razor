@attribute [StreamRendering(true)]
<!--
<div class="alert alert-secondary mt-4">
    <span class="oi oi-pencil me-2" aria-hidden="true">@detectedDevices.Count devices found out of @totalDevices.Count
        total devices</span>
</div>
-->
@if (@totalDevices == null)
{
    <p><em>Loading...</em></p>
}
else{
<table class="DeviceList">
    <thead>
        <tr>
            <th>Device</th>
            <th>Location</th>
            <th>Last Detected</th>
        </tr>
    </thead>
    <tbody> 
        @foreach (Device device in @totalDevices)
        {
            <tr>
                <td>@device.Name</td>
                <td>@device.LastBeacon?.Name</td>
                <td>@device.LastDetected</td>
            </tr>
        }
    </tbody>
</table>
}

@code
{
    public List<Device>? totalDevices;
    public List<Device>? detectedDevices;

    private readonly string logName = "AssetCounter";
    protected override async Task OnInitializedAsync()
    {
        totalDevices = await DeviceHandler.GetAllDevicesAsync();
        //List<Device> totalDevices = null;
        Logger.Log(logName, $"{totalDevices.Count} Device to Display");
        //List<Device> detectedDevices = await DeviceHandler.GetCurrentDevicesAsync();
        
    }

    
}